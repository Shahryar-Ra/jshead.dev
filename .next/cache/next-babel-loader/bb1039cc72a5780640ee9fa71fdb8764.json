{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Level-up\\\\Web Developer\\\\Practice\\\\js-head.dev\\\\components\\\\Container.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: sticky;\\n  z-index: 10;\\n  top: 0;\\n  backdrop-filter: saturate(180%) blur(20px);\\n  transition: background-color 0.1 ease-in-out;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport NextLink from 'next/link';\nimport { useColorMode, Button, Flex, Box, IconButton } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\nimport Footer from './Footer';\nvar StickyNav = styled(Flex)(_templateObject());\n_c = StickyNav;\n\nvar Container = function Container(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode,\n      toggleColorMode = _useColorMode.toggleColorMode;\n\n  var bgColor = {\n    light: 'white',\n    dark: 'gray.900'\n  };\n  var primarytextColor = {\n    light: 'black',\n    dark: 'white'\n  };\n  var navBgColor = {\n    light: 'rgba(255, 255, 255, 0.8)',\n    dark: 'rgba(23, 25, 35, 0.8)'\n  };\n  return __jsx(React.Fragment, null, __jsx(StickyNav, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    maxWidth: \"900px\",\n    width: \"100%\",\n    bg: navBgColor[colorMode],\n    as: \"nav\",\n    p: 8,\n    mt: [0, 8],\n    mb: 8,\n    mx: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Toggle dark mode\",\n    icon: colorMode === 'dark' ? 'sun' : 'moon',\n    onClick: toggleColorMode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(NextLink, {\n    href: \"/about\",\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    as: \"a\",\n    variant: \"ghost\",\n    p: [1, 4],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"About\")), __jsx(NextLink, {\n    href: \"/\",\n    passHref: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    as: \"a\",\n    variant: \"ghost\",\n    p: [1, 4],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Home\")))), __jsx(Flex, {\n    as: \"main\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    bg: bgColor[colorMode],\n    color: primarytextColor[colorMode],\n    px: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, children, __jsx(Footer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Container, \"uURyIwMgIfFLStF4nJMrxbb6o/4=\", false, function () {\n  return [useColorMode];\n});\n\n_c2 = Container;\nexport default Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StickyNav\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/Level-up/Web Developer/Practice/js-head.dev/components/Container.js"],"names":["React","NextLink","useColorMode","Button","Flex","Box","IconButton","styled","Footer","StickyNav","Container","children","colorMode","toggleColorMode","bgColor","light","dark","primarytextColor","navBgColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport NextLink from 'next/link';\nimport { useColorMode, Button, Flex, Box, IconButton } from '@chakra-ui/core';\nimport styled from '@emotion/styled';\n\nimport Footer from './Footer';\n\nconst StickyNav = styled(Flex)`\n  position: sticky;\n  z-index: 10;\n  top: 0;\n  backdrop-filter: saturate(180%) blur(20px);\n  transition: background-color 0.1 ease-in-out;\n`;\n\nconst Container = ({ children }) => {\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const bgColor = {\n    light: 'white',\n    dark: 'gray.900'\n  };\n  const primarytextColor = {\n    light: 'black',\n    dark: 'white'\n  };\n  const navBgColor = {\n    light: 'rgba(255, 255, 255, 0.8)',\n    dark: 'rgba(23, 25, 35, 0.8)'\n  };\n\n  return (\n    <>\n      <StickyNav\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        maxWidth=\"900px\"\n        width=\"100%\"\n        bg={navBgColor[colorMode]}\n        as=\"nav\"\n        p={8}\n        mt={[0, 8]}\n        mb={8}\n        mx=\"auto\"\n      >\n        <IconButton\n          aria-label=\"Toggle dark mode\"\n          icon={colorMode === 'dark' ? 'sun' : 'moon'}\n          onClick={toggleColorMode}\n        />\n        <Box>\n          <NextLink href=\"/about\" passHref>\n            <Button as=\"a\" variant=\"ghost\" p={[1, 4]}>\n              About\n            </Button>\n          </NextLink>\n          <NextLink href=\"/\" passHref>\n            <Button as=\"a\" variant=\"ghost\" p={[1, 4]}>\n              Home\n            </Button>\n          </NextLink>\n        </Box>\n      </StickyNav>\n      <Flex\n        as=\"main\"\n        justifyContent=\"center\"\n        flexDirection=\"column\"\n        bg={bgColor[colorMode]}\n        color={primarytextColor[colorMode]}\n        px={8}\n      >\n        {children}\n        <Footer />\n      </Flex>\n    </>\n  );\n};\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}